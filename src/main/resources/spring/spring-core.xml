<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 用户获取spring bean -->
    <bean id="applicationContext" class="wang.yobbo.common.spring.SpringContextUtil"/>

    <!-- 扫描注解Bean -->
    <context:component-scan base-package="wang.yobbo.**">
        <!--<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />-->
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>

    <aop:config proxy-target-class="true"/>
    <!-- 开启AOP监听 -->
    <aop:aspectj-autoproxy expose-proxy="true"/>

    <import resource="classpath*:spring/${cacheManagerTpye}/spring-shiro-${cacheManagerTpye}.xml"/>

    <bean id="nextRobotCacheManager" class="wang.yobbo.common.appengine.cache.NextRobotCacheManagerImpl">
        <constructor-arg value="default${cacheManagerTpye}Cache"/>
        <property name="shiroCacheManager" ref="${cacheManagerTpye}ShiroCacheManager"/>
        <property name="springCacheManager" ref="${cacheManagerTpye}SpringCacheManager"/>
    </bean>

    <!-- shiro相关 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="userRealm"/>
            </list>
        </property>
        <property name="sessionManager" ref="sessionManager"></property>
        <property name="rememberMeManager" ref="rememberMeManager"></property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>

    <!-- 用户认证 -->
    <bean id="userRealm" class="wang.yobbo.sys.security.realm.CustomAuthoringRealm">
        <property name="authenticationCachingEnabled" value="false" />
        <property name="authorizationCachingEnabled" value="false" />
    </bean>

    <!-- cookie设置 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey"
                  value="#{T(org.apache.shiro.codec.Base64).decode('${shiro.uid.rememeberMe.cookie.base64.cipherKey}')}" />
        <property name="cookie" >
            <bean class="org.apache.shiro.web.servlet.SimpleCookie">
                <constructor-arg value="${shiro.uid.rememeberMe.cookie.name}" />
                <property name="domain" value="${shiro.uid.cookie.domain}" />
                <property name="path" value="${shiro.uid.cookie.path}" />
                <property name="httpOnly" value="${shiro.uid.cookie.httpOnly}" />
                <property name="maxAge" value="${shiro.uid.rememeberMe.cookie.maxAge}" />
            </bean>
        </property>
    </bean>

    <!--替换默认的form 验证过滤器 -->
    <bean id="formAuthenticationFilter" class="wang.yobbo.sys.security.shiro.filter.CustomFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="${shiro.login.url}"/>
    </bean>

    <!-- 退出登录过滤器 -->
    <bean id="logoutFilter" class="wang.yobbo.sys.security.shiro.filter.CustomLogoutFilter">
        <property name="redirectUrl" value="${shiro.logout.success.url}" />
        <property name="sessionDAO" ref="${cacheManagerTpye}ShiroSessionDAO" />
        <property name="ssoRedirectUrl" value="${shiro.logout.success.url}" />
    </bean>

    <!-- 限制同时登录人数 -->
    <bean id="kickoutSessionControlFilter" class="wang.yobbo.sys.security.shiro.filter.KickoutSessionControlFilter">
        <property name="sessionDAO" ref="${cacheManagerTpye}ShiroSessionDAO" />
        <property name="sessionManager" ref="sessionManager" />
        <property name="kickoutAfter" value="true"/>
        <property name="maxSession" value="${shiro.maxSession}"/>
        <property name="kickoutUrl" value="${shiro.kickoutUrl}"/>
    </bean>

    <!--提取系统用户（User） 验证用户是否合法的过滤器（是否删除状态，是否被锁定状态） -->
    <bean id="sysUserFilter" class="wang.yobbo.sys.security.shiro.filter.SysUserFilter">
        <property name="userDisabledUrl" value="${shiro.user.disabled.url}" />
        <property name="userNotfoundUrl" value="${shiro.user.notfound.url}" />
        <property name="userUnknownErrorUrl" value="${shiro.user.unknown.error.url}" />
    </bean>

    <!-- 重写角色授权过滤器 -->
    <bean id="anyRoleFilter" class="wang.yobbo.sys.security.shiro.filter.AnyRoleAuthorizationFilter"></bean>

    <bean id="filterChainResolver" class="wang.yobbo.sys.security.shiro.extend.CustomPathMatchingFilterChainResolver">
        <property name="customDefaultFilterChainManager" ref="filterChainManager"/>
    </bean>

    <!-- session 管理 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionListeners">
            <bean class="wang.yobbo.sys.security.shiro.filter.CustomSessionListenerAdapter"></bean>
        </property>
        <property name="globalSessionTimeout" value="${shiro.session.globalSessionTimeout}"></property>
        <property name="sessionDAO" ref="${cacheManagerTpye}ShiroSessionDAO" />
        <property name="deleteInvalidSessions" value="false" />
        <property name="sessionValidationInterval" value="${shiro.session.validation.interval}" />
        <property name="sessionValidationSchedulerEnabled" value="true" />
        <property name="sessionValidationScheduler">
            <!--会话验证调度-->
            <bean class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
                <property name="interval" value="${shiro.session.validation.interval}" />
                <property name="sessionManager" ref="sessionManager" />
            </bean>
        </property>
        <property name="cacheManager" ref="${cacheManagerTpye}ShiroCacheManager"/>
        <property name="sessionIdCookieEnabled" value="true" />
        <property name="sessionIdCookie">
            <!-- 设置cookie uid -->
            <bean class="org.apache.shiro.web.servlet.SimpleCookie">
                <constructor-arg value="${shiro.uid.cookie.name}" />
                <property name="domain" value="${shiro.uid.cookie.domain}" />
                <property name="path" value="${shiro.uid.cookie.path}" />
                <property name="httpOnly" value="${shiro.uid.cookie.httpOnly}" />
                <property name="maxAge" value="${shiro.uid.cookie.maxAge}" />
            </bean>
        </property>
    </bean>

    <bean id="filterChainManager" class="wang.yobbo.sys.security.shiro.extend.CustomDefaultFilterChainManager">
        <property name="loginUrl" value="${shiro.login.url}" />
        <property name="successUrl" value="${shiro.default.success.url}"/>
        <property name="customFilters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter" />
                <entry key="anyRole" value-ref="anyRoleFilter" />
                <entry key="logout" value-ref="logoutFilter" />
                <entry key="sysUser" value-ref="sysUserFilter" />
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>
            </util:map>
        </property>
        <property name="defaultFilterChainDefinitions">
            <value>
                /api/** = anon
                /static*/** = anon
                /resources*/** = anon
                /front/cardinfor/** = anon
                /sys/login = authc
                /sys/unauthorized = authc
                /logout = logout
                /engine/** = authc
            </value>
        </property>
    </bean>

    <!-- /** = kickout,authc -->

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="shiroFilter"/>
        <property name="targetMethod" value="setFilterChainResolver"/>
        <property name="arguments" ref="filterChainResolver"/>
    </bean>

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>